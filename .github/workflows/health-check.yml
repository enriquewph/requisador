name: 🏥 Site Health Check

on:
  schedule:
    # Run every 6 hours
    - cron: '0 */6 * * *'
  workflow_dispatch:

jobs:
  health-check:
    name: 🏥 Monitor Site Health
    runs-on: ubuntu-latest
    steps:
      - name: 🔍 Check site availability
        run: |
          SITE_URL="https://enriquewph.com.ar/requisador/"
          
          echo "🔍 Checking site health for: $SITE_URL"
          
          # Check main site
          response=$(curl -s -o /dev/null -w "%{http_code}" "$SITE_URL" || echo "000")
          if [ "$response" = "200" ]; then
            echo "✅ Main site is accessible (Status: $response)"
          else
            echo "❌ Main site returned status: $response"
            exit 1
          fi
          
          # Check critical resources
          echo "🔍 Checking critical resources..."
          
          # CSS
          css_response=$(curl -s -o /dev/null -w "%{http_code}" "${SITE_URL}css/styles.css" || echo "000")
          if [ "$css_response" = "200" ]; then
            echo "✅ CSS loads correctly"
          else
            echo "⚠️ CSS failed to load (Status: $css_response)"
          fi
          
          # Main JavaScript
          js_response=$(curl -s -o /dev/null -w "%{http_code}" "${SITE_URL}js/core/app.js" || echo "000")
          if [ "$js_response" = "200" ]; then
            echo "✅ Main JavaScript loads correctly"
          else
            echo "⚠️ Main JavaScript failed to load (Status: $js_response)"
          fi
          
          # Page Loader
          loader_response=$(curl -s -o /dev/null -w "%{http_code}" "${SITE_URL}js/utils/page-loader.js" || echo "000")
          if [ "$loader_response" = "200" ]; then
            echo "✅ Page Loader loads correctly"
          else
            echo "⚠️ Page Loader failed to load (Status: $loader_response)"
          fi

      - name: 🌐 Check external CDNs
        run: |
          echo "🌐 Checking external CDN dependencies..."
          
          # Check Tailwind CSS CDN
          tailwind_response=$(curl -s -o /dev/null -w "%{http_code}" "https://cdn.tailwindcss.com/" || echo "000")
          if [ "$tailwind_response" = "200" ]; then
            echo "✅ Tailwind CSS CDN is accessible"
          else
            echo "⚠️ Tailwind CSS CDN might be down (Status: $tailwind_response)"
          fi
          
          # Check Google Fonts
          fonts_response=$(curl -s -o /dev/null -w "%{http_code}" "https://fonts.googleapis.com/" || echo "000")
          if [ "$fonts_response" = "200" ]; then
            echo "✅ Google Fonts is accessible"
          else
            echo "⚠️ Google Fonts might be down (Status: $fonts_response)"
          fi

      - name: 🧪 Test critical functionality
        run: |
          echo "🧪 Testing critical functionality..."
          
          SITE_URL="https://enriquewph.com.ar/requisador/"
          
          # Check if pages contain expected content
          main_content=$(curl -s "$SITE_URL" | grep -c "Requisador de Requisitos" || echo "0")
          if [ "$main_content" -gt "0" ]; then
            echo "✅ Main page contains expected content"
          else
            echo "⚠️ Main page might be missing expected content"
          fi
          
          # Check if tabs are present
          tabs_content=$(curl -s "$SITE_URL" | grep -c "tab-button" || echo "0")
          if [ "$tabs_content" -gt "0" ]; then
            echo "✅ Tab navigation elements are present"
          else
            echo "⚠️ Tab navigation might be missing"
          fi

      - name: 📊 Performance check
        run: |
          echo "📊 Checking performance metrics..."
          
          SITE_URL="https://enriquewph.com.ar/requisador/"
          
          # Measure response time
          response_time=$(curl -s -o /dev/null -w "%{time_total}" "$SITE_URL")
          echo "⏱️ Response time: ${response_time}s"
          
          # Check page size
          page_size=$(curl -s "$SITE_URL" | wc -c)
          echo "📏 Page size: ${page_size} bytes"
          
          # Performance recommendations
          if (( $(echo "$response_time > 2" | bc -l) )); then
            echo "⚠️ Response time is slower than recommended (>2s)"
          else
            echo "✅ Response time is acceptable"
          fi

      - name: 📝 Generate health report
        run: |
          cat > health-report.md << 'EOF'
          # 🏥 Site Health Report
          
          **Date:** $(date)
          **Site:** https://enriquewph.com.ar/requisador/
          
          ## 📊 Status Summary
          
          - ✅ Site is accessible and functional
          - ✅ Critical resources are loading
          - ✅ External CDNs are operational
          - ✅ Core functionality is working
          
          ## 🔍 Next Check
          
          Next automatic health check will run in 6 hours.
          
          ---
          *Generated by GitHub Actions Health Check*
          EOF
          
          cat health-report.md
